name: CI Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    name: Test Spring Boot Backend
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: tutor_connect
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=30s
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Test with Maven
        run: mvn -B test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/tutor_connect
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root

  frontend-build:
    name: Build React Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm install
          npm install react-router-dom axios
        working-directory: tutorconnectfrontend
      
      - name: Build production bundle
        run: CI=false npm run build
        working-directory: tutorconnectfrontend
        env:
          NODE_OPTIONS: --openssl-legacy-provider

  docker-build-verify:
    name: Verify Docker Builds
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-build]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build backend image
        run: docker build -t backend -f Dockerfile .

      - name: Build frontend image
        run: docker build -t frontend ./tutorconnectfrontend

  docker-compose-test:
    name: Test Docker Compose
    runs-on: ubuntu-latest
    needs: docker-build-verify
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
          docker-compose --version
      
      - name: Start containers
        run: docker-compose up -d --build
      
      - name: Wait for backend to be ready
        run: |
          for i in {1..10}; do
            if docker-compose logs backend | grep -q "Started TutorConnectApplication"; then
              echo "Backend started successfully!"
              exit 0
            fi
            echo "Waiting for backend to start (attempt $i)..."
            sleep 10
          done
          echo "Backend failed to start."
          docker-compose logs
          exit 1
      
      - name: Verify backend health
        run: |
          curl --retry 5 --retry-delay 10 -f http://localhost:8080/actuator/health || (docker-compose logs backend && exit 1)
      
      - name: Stop containers
        run: docker-compose down
        if: always()
