name: TutorConnect CI/CD

on:
  push:
    branches:
      - dev_maaroufi
      - dev_marouane
      - dev_zouhair
      - main

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18.x'
  FRONTEND_DIR: 'tutorconnectfrontend'
  BACKEND_DIR: '.' # ou 'tutorconnectbackend' si c’est un sous-dossier

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build & Test All Components

    steps:
      # --- CHECKOUT CODE ---
      - name: Checkout repository
        uses: actions/checkout@v3

      # --- SETUP JAVA ---
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      # --- BACKEND: Build JAR ---
      - name: Build backend with Maven
        run: mvn -f ${{ env.BACKEND_DIR }}/pom.xml clean package -DskipTests

      - name: Run backend tests
        run: mvn -f ${{ env.BACKEND_DIR }}/pom.xml test

      # --- FRONTEND: Install & Build ---
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build React frontend
        working-directory: ${{ env.FRONTEND_DIR }}
        run: |
          npm install
          npm run build

      # --- BACKEND: Docker Build ---
      - name: Build Docker image for backend
        run: |
          mkdir -p docker-backend
          cp ${{ env.BACKEND_DIR }}/target/*.jar docker-backend/app.jar

          cat > docker-backend/Dockerfile <<'EOF'
          FROM openjdk:17-slim
          VOLUME /tmp
          COPY app.jar app.jar
          ENTRYPOINT ["java", "-jar", "/app.jar"]
          EOF

          docker build -t tutorconnect-backend:latest docker-backend
          docker save tutorconnect-backend:latest -o backend-image.tar

      # --- FRONTEND: Docker Build ---
      - name: Build Docker image for frontend
        run: |
          mkdir -p docker-frontend
          cp -r ${{ env.FRONTEND_DIR }}/build/* docker-frontend/

          cat > docker-frontend/Dockerfile <<'EOF'
          FROM nginx:alpine
          COPY . /usr/share/nginx/html
          EXPOSE 80
          CMD ["nginx", "-g", "daemon off;"]
          EOF

          docker build -t tutorconnect-frontend:latest docker-frontend
          docker save tutorconnect-frontend:latest -o frontend-image.tar

      # --- Upload Artifacts ---
      - name: Upload backend JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-jar
          path: ${{ env.BACKEND_DIR }}/target/*.jar

      - name: Upload frontend build
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: ${{ env.FRONTEND_DIR }}/build

      - name: Upload backend Docker image
        uses: actions/upload-artifact@v3
        with:
          name: backend-docker-image
          path: backend-image.tar

      - name: Upload frontend Docker image
        uses: actions/upload-artifact@v3
        with:
          name: frontend-docker-image
          path: frontend-image.tar

      # --- Optional: Verify Step ---
      - name: Verify artifacts
        run: |
          echo "✅ Backend JAR: $(ls ${{ env.BACKEND_DIR }}/target/*.jar)"
          echo "✅ Frontend built files: $(ls ${{ env.FRONTEND_DIR }}/build | wc -l) files"
          echo "✅ Docker images saved: backend-image.tar, frontend-image.tar"
