name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    name: Test Spring Boot Backend
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: tutor_connect
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Test with Maven
        run: mvn -B test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/tutor_connect
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: ""

  frontend-test:
    name: Test React Frontend
    runs-on: ubuntu-latest
    needs: backend-test
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
        working-directory: tutorconnectfrontend
      
      - name: Run tests
        run: npm test -- --watchAll=false
        working-directory: tutorconnectfrontend
      
      - name: Build production bundle
        run: npm run build
        working-directory: tutorconnectfrontend

  docker-build-verify:
    name: Verify Docker Builds
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build backend image
        run: docker build -t backend .
      
      - name: Build frontend image
        run: docker build -t frontend ./tutorconnectfrontend

  docker-compose-test:
    name: Test Docker Compose
    runs-on: ubuntu-latest
    needs: docker-build-verify
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: tutor_connect
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3
      
      - name: Start containers
        run: docker-compose up -d --build
      
      - name: Verify backend health
        run: |
          sleep 15 # Wait for startup
          curl -f http://localhost:8080/actuator/health || exit 1
      
      - name: Verify frontend build
        run: |
          docker-compose exec frontend ls -la /app/build
