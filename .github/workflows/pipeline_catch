name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    name: Test Spring Boot Backend
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: tutor_connect
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=30s
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run tests
        id: backend-tests
        run: mvn -B test
        continue-on-error: true
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/tutor_connect
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root

      - name: Log backend test failure
        if: steps.backend-tests.outcome == 'failure'
        run: echo " Tests backend échoués. Voir les logs Maven."

  frontend-build:
    name: Build React Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd tutorconnectfrontend
          npm install
          npm install react-router-dom axios

      - name: Build production bundle
        id: frontend-build-step
        run: CI=false npm run build
        continue-on-error: true
        working-directory: tutorconnectfrontend
        env:
          NODE_OPTIONS: --openssl-legacy-provider

      - name: Log frontend build failure
        if: steps.frontend-build-step.outcome == 'failure'
        run: echo "Échec de la construction du frontend. Vérifier npm build."

  docker-build-verify:
    name: Verify Docker Builds
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-build]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build backend image
        id: docker-backend
        run: docker build -t backend .
        continue-on-error: true

      - name: Check backend image build
        if: steps.docker-backend.outcome == 'failure'
        run: echo " Échec de la création de l'image Docker backend."

      - name: Build frontend image
        id: docker-frontend
        run: docker build -t frontend ./tutorconnectfrontend
        continue-on-error: true

      - name: Check frontend image build
        if: steps.docker-frontend.outcome == 'failure'
        run: echo " Échec de la création de l'image Docker frontend."
